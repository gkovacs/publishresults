// Generated by LiveScript 1.3.1
(function(){
  var express, path, spawn, CBuffer, publishresults, out$ = typeof exports != 'undefined' && exports || this;
  express = require('express');
  path = require('path');
  spawn = require('child_process').spawn;
  CBuffer = require('CBuffer');
  out$.publishresults = publishresults = function(){
    var cmd, messages, curidx, app, i$, to$, portnum, e;
    if (process.argv[2] == null || process.argv[2].toString() === '') {
      console.log('need command to run');
      return;
    }
    cmd = spawn('bash', ['-c', process.argv[2]]);
    messages = new CBuffer(1000);
    curidx = 0;
    cmd.stdout.on('data', function(data){
      var nd;
      nd = data.toString();
      messages.push({
        type: 'stdout',
        text: nd,
        time: Date.now(),
        idx: curidx
      });
      curidx = curidx + 1;
      return process.stdout.write(nd);
    });
    cmd.stderr.on('data', function(data){
      var nd;
      nd = data.toString();
      messages.push({
        type: 'stderr',
        text: nd,
        time: Date.now(),
        idx: curidx
      });
      curidx = curidx + 1;
      return process.stdout.write(nd);
    });
    app = express();
    for (i$ = 9876, to$ = Infinity; i$ <= to$; ++i$) {
      portnum = i$;
      try {
        app.listen(portnum, '0.0.0.0');
        break;
      } catch (e$) {
        e = e$;
        continue;
      }
    }
    console.log('visit the following url in your browser: http://localhost:' + portnum);
    app.get('/', function(req, res){
      res.contentType('text/html');
      return res.send('<!DOCTYPE html>\n<html>\n<head><meta charset="UTF-8"></head>\n<body>\n<script src="jquery-1.11.1.min.js"></script>\n<script src="webindex.js"></script>\n<div id="messages"></div>\n</body>\n</html>');
    });
    app.get('/messages', function(req, res){
      var output, minidx;
      output = [];
      minidx = 0;
      if (req.query.idx != null) {
        minidx = parseInt(req.query.idx);
      }
      messages.forEach(function(msgelem){
        if (msgelem.idx >= minidx) {
          return output.push(msgelem);
        }
      });
      return res.send(JSON.stringify(output));
    });
    app.get('/jquery-1.11.1.min.js', function(req, res){
      return res.sendFile(path.join(__dirname, 'jquery-1.11.1.min.js'));
    });
    return app.get('/webindex.js', function(req, res){
      return res.sendFile(path.join(__dirname, 'webindex.js'));
    });
  };
}).call(this);
